buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

ext.MINECRAFT_VERSION = "1.12.2"
ext.FORGE_VERSION = "14.23.4.2705"
ext.MAPPING_VERSION = "snapshot_20180810"
ext.MINECRAFT_FULL_VERSIONS = "1.8,1.8.8,1.8.9,1.9,1.9.4,1.10,1.10.2,1.11,1.11.2,1.12,1.12.1,1.12.2"

ext.snapshot = !(rootProject.ext.config.snapshot == "" || rootProject.ext.config.snapshot == "0" || rootProject.ext.config.snapshot == 0)

archivesBaseName = "CustomSkinLoader_Forge"
version = rootProject.ext.config.version + rootProject.ext.config.dev_version + (snapshot ? "-SNAPSHOT-" + System.getenv("CIRCLE_BUILD_NUM") : "")
group = "customskinloader"

sourceCompatibility = targetCompatibility = 1.6
compileJava {
    sourceCompatibility = targetCompatibility = 1.6
}
jar {
    manifest {
        attributes 'FMLCorePlugin': 'customskinloader.forge.ForgePlugin'
        attributes 'FMLCorePluginContainsFMLMod': true
    }
    exclude 'net/minecraft/client/renderer/texture/NativeImage.class'
}
sourceSets {
    main {
        java {
            //Common
            srcDir '../Common/source'
            //Forge
            srcDir 'source'
        }
        resources {
            //Common
            srcDir '../Common/resource'
            exclude 'Profile.json'
            //Forge
            srcDir 'resource'
        }
    }
}

minecraft {
    version = MINECRAFT_VERSION + "-" + FORGE_VERSION
    runDir = "run"
    mappings = MAPPING_VERSION

    replace '@MOD_VERSION@', rootProject.ext.config.version
    replace '@MOD_FULL_VERSION@', project.version
    replaceIn 'CustomSkinLoader.java'
    replaceIn 'ForgeMod.java'
}

processResources {
    expand([
            modVersion    : rootProject.ext.config.version,
            modFullVersion: project.version,
            mcVersion     : MINECRAFT_VERSION,
            mcFullVersions: MINECRAFT_FULL_VERSIONS,
            forgeVersion  : FORGE_VERSION,
            gitVersion    : System.getenv("CIRCLE_SHA1"),
            buildUrl      : System.getenv("CIRCLE_BUILD_URL")
    ])
}
task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf { System.getenv("KEY_PASS") != null }
    doLast { System.out.println("Jar will be signed.") }

    inputFile = jar.archivePath
    outputFile = jar.archivePath

    keyStore = 'CustomSkinLoader.jks'
    alias = 'CustomSkinLoader'
    storePass = System.getenv("KEY_PASS")
    keyPass = System.getenv("KEY_PASS")
}
build.dependsOn signJar

task afterBuild {
    doLast {
        //copyBuildFile
        copy {
            from 'build/libs'
            into '../build/libs'
            include '**/*.jar'
            exclude '**/*-sources.jar'
        }
    }
}
build.finalizedBy afterBuild
